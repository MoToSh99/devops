name: Deploy-dev
on:
  push:
    branches:
      - develop
jobs:
  test-linter:
    runs-on: ubuntu-latest
    name: Linter
    steps:
    - uses: actions/checkout@master
    - name: linter
      uses: shoukoo/golang-pipeline/go1.13/linter@master
      env:
        PROJECT_PATH: "./app/"
  unit-test:
    runs-on: ubuntu-latest
    name: UnitTest
    steps:
    - uses: actions/checkout@master
    - name: unittest
      uses: shoukoo/golang-pipeline/go1.13/test@master
      env:
        PROJECT_PATH: "./app/"
  import-test:
    runs-on: ubuntu-latest
    name: ImportCheck
    steps:
    - uses: actions/checkout@master
    - name: importcheck
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: imports
        token: ${{ secrets.GITHUB_TOKEN }}
        directory: "./app/"
  error-check:
    runs-on: ubuntu-latest
    name: ErrorCheck
    steps:
    - uses: actions/checkout@master
    - name: errorcheck
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: errcheck
        token: ${{ secrets.GITHUB_TOKEN }}
        directory: "./app/"
  shadow-check:
    runs-on: ubuntu-latest
    name: ShadowCheck
    steps:
    - uses: actions/checkout@master
    - name: shadowcheck
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: shadow
        token: ${{ secrets.GITHUB_TOKEN }}
        directory: "./app/"
  static-check:
    runs-on: ubuntu-latest
    name: StaticCheck
    steps:
    - uses: actions/checkout@master
    - name: staticcheck
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: staticcheck
        token: ${{ secrets.GITHUB_TOKEN }}
        directory: "./app/"
  security-check:
    runs-on: ubuntu-latest
    name: SecurityCheck
    steps:
    - uses: actions/checkout@master
    - name: securitycheck
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: sec
        token: ${{ secrets.GITHUB_TOKEN }}
        flags: "-exclude=G104"
        directory: "./app/"
  deploy:
    needs: [security-check, static-check, shadow-check, error-check, import-test, unit-test, test-linter]
    runs-on: ubuntu-latest
    name: Deploy
    steps:
    - uses: actions/checkout@master
    - name: publish docker
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: gruppe11/devops-test
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        context: "./app"
        tags: "latest"
    - name: Deploy on DigitalOcean
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DO_IP_TEST }}
        USERNAME: ${{ secrets.ROOT }}
        PORT: 22
        KEY: ${{ secrets.SSHKEY }}
        script: |
         cd ../var/www/devops/
         rm ../../../tmp/minitwit.db
         docker login
         ${{ secrets.DOCKER_USERNAME }}
         ${{ secrets.DOCKER_PASSWORD }}
         docker-compose -f docker-compose.dev.yaml pull
         docker-compose -f docker-compose.dev.yaml up -d
  integration-test:
    needs: [deploy]
    runs-on: ubuntu-latest
    name: IntegrationTest
    steps:
    - uses: actions/checkout@master
    - name: Scenario test
      run: |
        cd simulator
        python3 minitwit_simulator.py "http://142.93.238.65/simulator" | grep . && exit 1 || exit 0

