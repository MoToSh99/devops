on:
  push:
    branches-ignore:
      - "develop"
      - "master"
name: test
jobs:
  test-linter:
    runs-on: ubuntu-latest
    name: Linter
    steps:
      - uses: actions/checkout@master
      - name: linter
        uses: shoukoo/golang-pipeline/go1.13/linter@master
        env:
          PROJECT_PATH: "./app/"
  unit-test:
    runs-on: ubuntu-latest
    name: UnitTest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: minitwit_test
        ports:
          # will assign a random free host port
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@master
      - name: unittest
        uses: shoukoo/golang-pipeline/go1.13/test@master
        env:
          PROJECT_PATH: "./app/"
          POSTGRES_USER_TESTS: postgres
          POSTGRES_PASSWORD_TESTS: postgres
          POSTGRES_DB_TESTS: minitwit_test
          POSTGRES_PORT_TESTS: ${{ job.services.postgres.ports[5432] }}
  error-check:
    runs-on: ubuntu-latest
    name: ErrorCheck
    steps:
      - uses: actions/checkout@master
      - name: errorcheck
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: errcheck
          token: ${{ secrets.GITHUB_TOKEN }}
          directory: "./app/"
          flags: "-ignoretests -ignore 'encoding/json'"
  shadow-check:
    runs-on: ubuntu-latest
    name: ShadowCheck
    steps:
      - uses: actions/checkout@master
      - name: shadowcheck
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: shadow
          token: ${{ secrets.GITHUB_TOKEN }}
          directory: "./app/"
  static-check:
    runs-on: ubuntu-latest
    name: StaticCheck
    steps:
      - uses: actions/checkout@master
      - name: staticcheck
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: staticcheck
          token: ${{ secrets.GITHUB_TOKEN }}
          directory: "./app/"
  security-check:
    runs-on: ubuntu-latest
    name: SecurityCheck
    steps:
      - uses: actions/checkout@master
      - name: securitycheck
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: sec
          token: ${{ secrets.GITHUB_TOKEN }}
          flags: "-exclude=G104"
          directory: "./app/"
