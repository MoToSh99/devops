version: "2.1"
services:
  database:
    image: postgres
    restart: unless-stopped
    network_mode: host
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
  go-web-app:
    image: gruppe11/devops-prod:latest
    restart: unless-stopped
    container_name: app
    network_mode: host
    ports:
      - "5000:5000"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      EXTERNAL_MONITOR_URL: ${EXTERNAL_MONITOR_URL}
    depends_on:
      database:
        condition: service_healthy
  nginx:
    image: nginx:1.17
    container_name: reverse-proxy
    restart: unless-stopped
    network_mode: host
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/
    depends_on:
      - go-web-app

volumes:
  postgres_data:
